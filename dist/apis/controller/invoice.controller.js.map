{"version":3,"sources":["../../../src/apis/controller/invoice.controller.js"],"names":["findAll","req","res","next","Invoice","find","then","json","invoices","catch","status","HttpStatus","INTERNAL_SERVER_ERROR","err","create","schema","Joi","object","keys","item","string","required","date","due","qty","number","integer","optional","tax","rate","Validate","body","error","value","details","BAD_REQUEST","invoice","findOne","id","params","findByIdAndRemove","NOT_FOUND","delete","findById","update","findOneAndUpdate","_id","new"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;kBAEe;AACXA,WADW,mBACHC,GADG,EACEC,GADF,EACOC,IADP,EACa;AACpBC,0BAAQC,IAAR,GACCC,IADD,CACM;AAAA,mBAAYJ,IAAIK,IAAJ,CAASC,QAAT,CAAZ;AAAA,SADN,EAECC,KAFD,CAEO;AAAA,mBAAOP,IAAIQ,MAAJ,CAAWC,0BAAWC,qBAAtB,EAA6CL,IAA7C,CAAkDM,GAAlD,CAAP;AAAA,SAFP;AAGH,KALU;AAMXC,UANW,kBAMJb,GANI,EAMCC,GAND,EAMMC,IANN,EAMY;;AAEnB,YAAMY,SAASC,cAAIC,MAAJ,GAAaC,IAAb,CAAkB;AAC7BC,kBAAOH,cAAII,MAAJ,GAAaC,QAAb,EADsB;AAE7BC,kBAAON,cAAIM,IAAJ,GAAWD,QAAX,EAFsB;AAG7BE,iBAAKP,cAAIM,IAAJ,GAAWD,QAAX,EAHwB;AAI7BG,iBAAMR,cAAIS,MAAJ,GAAaC,OAAb,GAAuBC,QAAvB,EAJuB;AAK7BC,iBAAMZ,cAAIS,MAAJ,GAAaE,QAAb,EALuB;AAM7BE,kBAAOb,cAAIS,MAAJ,GAAaE,QAAb;AANsB,SAAlB,CAAf;;AAFmB,4BAUMX,cAAIc,QAAJ,CAAa7B,IAAI8B,IAAjB,EAAuBhB,MAAvB,CAVN;AAAA,YAUXiB,KAVW,iBAUXA,KAVW;AAAA,YAUJC,KAVI,iBAUJA,KAVI;;AAWnB,YAAGD,SAASA,MAAME,OAAlB,EACA;AACI,mBAAOhC,IAAIQ,MAAJ,CAAWC,0BAAWwB,WAAtB,EAAmC5B,IAAnC,CAAwCyB,KAAxC,CAAP;AACH;AACD5B,0BAAQU,MAAR,CAAemB,KAAf,EAAsB3B,IAAtB,CAA2B;AAAA,mBAAWJ,IAAIK,IAAJ,CAAS6B,OAAT,CAAX;AAAA,SAA3B,EACC3B,KADD,CACO;AAAA,mBAAOP,IAAIQ,MAAJ,CAAWC,0BAAWC,qBAAtB,EAA6CL,IAA7C,CAAkDM,GAAlD,CAAP;AAAA,SADP;AAEH,KAvBU;AAwBXwB,WAxBW,mBAwBHnC,GAxBG,EAwBED,GAxBF,EAwBO;AAAA,YACNqC,EADM,GACCrC,IAAIsC,MADL,CACND,EADM;;AAEdlC,0BAAQoC,iBAAR,CAA0BF,EAA1B,EAA8BhC,IAA9B,CAAmC,mBAAW;AAC1C,gBAAI,CAAC8B,OAAL,EAAc;AACV,uBAAOlC,IAAIQ,MAAJ,CAAWC,0BAAW8B,SAAtB,EAAiClC,IAAjC,CAAsC,EAAEM,KAAM,4BAAR,EAAtC,CAAP;AACH;AACD,mBAAOX,IAAIK,IAAJ,CAAS6B,OAAT,CAAP;AACH,SALD;AAMH,KAhCU;AAiCXM,UAjCW,mBAiCJxC,GAjCI,EAiCCD,GAjCD,EAiCM;AAAA,YACLqC,EADK,GACErC,IAAIsC,MADN,CACLD,EADK;;AAEblC,0BAAQuC,QAAR,CAAiBL,EAAjB,EAAqBhC,IAArB,CAA0B,mBAAW;AACjC,gBAAI,CAAC8B,OAAL,EAAc;AACV,uBAAOlC,IAAIQ,MAAJ,CAAWC,0BAAW8B,SAAtB,EAAiClC,IAAjC,CAAsC,EAAEM,KAAM,8BAAR,EAAtC,CAAP;AACH;AACD,mBAAOX,IAAIK,IAAJ,CAAS6B,OAAT,CAAP;AACH,SALD,EAKG3B,KALH,CAKS;AAAA,mBAAOP,IAAIQ,MAAJ,CAAWC,0BAAWC,qBAAtB,EAA6CL,IAA7C,CAAkDM,GAAlD,CAAP;AAAA,SALT;AAMH,KAzCU;AA0CX+B,UA1CW,kBA0CJ1C,GA1CI,EA0CCD,GA1CD,EA0CM;AAAA,+BACEe,cAAIC,MAAJ,GAAaC,IAAb,CAAkB;AAC7BC,kBAAOH,cAAII,MAAJ,GAAaO,QAAb,EADsB;AAE7BL,kBAAON,cAAIM,IAAJ,GAAWK,QAAX,EAFsB;AAG7BJ,iBAAKP,cAAIM,IAAJ,GAAWK,QAAX,EAHwB;AAI7BH,iBAAMR,cAAIS,MAAJ,GAAaE,QAAb,GAAwBN,QAAxB,EAJuB;AAK7BO,iBAAMZ,cAAIS,MAAJ,GAAaE,QAAb,EALuB;AAM7BE,kBAAOb,cAAIS,MAAJ,GAAaE,QAAb;AANsB,SAAlB,CADF;AAAA,YACLW,EADK,oBACLA,EADK;;AAAA,6BASYtB,cAAIc,QAAJ,CAAa7B,IAAI8B,IAAjB,EAAuBhB,MAAvB,CATZ;AAAA,YASLiB,KATK,kBASLA,KATK;AAAA,YASEC,KATF,kBASEA,KATF;;AAUb,YAAGD,SAASA,MAAME,OAAlB,EACA;AACI,mBAAOhC,IAAIQ,MAAJ,CAAWC,0BAAWwB,WAAtB,EAAmC5B,IAAnC,CAAwCyB,KAAxC,CAAP;AACH;AACD5B,0BAAQyC,gBAAR,CAAyB,EAACC,KAAKR,EAAN,EAAzB,EAAoCL,KAApC,EAA2C,EAACc,KAAK,IAAN,EAA3C,EAAwDzC,IAAxD,CAA6D;AAAA,mBAAWJ,IAAIK,IAAJ,CAAS6B,OAAT,CAAX;AAAA,SAA7D,EACC3B,KADD,CACO;AAAA,mBAAOP,IAAIQ,MAAJ,CAAWC,0BAAWC,qBAAtB,EAA6CL,IAA7C,CAAkDM,GAAlD,CAAP;AAAA,SADP;AAEH;AA1DU,C","file":"invoice.controller.js","sourcesContent":["import Invoice from '../models/invoice.model';\r\nimport Joi from 'joi';\r\nimport HttpStatus from 'http-status-codes';\r\n\r\nexport default {\r\n    findAll(req, res, next) {\r\n        Invoice.find()\r\n        .then(invoices => res.json(invoices))\r\n        .catch(err => res.status(HttpStatus.INTERNAL_SERVER_ERROR).json(err));\r\n    },\r\n    create(req, res, next) {\r\n\r\n        const schema = Joi.object().keys({\r\n            item : Joi.string().required(),\r\n            date : Joi.date().required(),\r\n            due: Joi.date().required(),\r\n            qty : Joi.number().integer().optional(),\r\n            tax : Joi.number().optional(),\r\n            rate : Joi.number().optional()\r\n        });\r\n        const { error, value } = Joi.Validate(req.body, schema);\r\n        if(error && error.details)\r\n        {\r\n            return res.status(HttpStatus.BAD_REQUEST).json(error);\r\n        }\r\n        Invoice.create(value).then(invoice => res.json(invoice))\r\n        .catch(err => res.status(HttpStatus.INTERNAL_SERVER_ERROR).json(err));\r\n    },\r\n    findOne(res, req) {\r\n        const { id } = req.params;\r\n        Invoice.findByIdAndRemove(id).then(invoice => {\r\n            if (!invoice) {\r\n                return res.status(HttpStatus.NOT_FOUND).json({ err : 'Cloud not find any invoice' });\r\n            }\r\n            return res.json(invoice);\r\n        });\r\n    },\r\n    delete(res, req) {\r\n        const { id } = req.params;\r\n        Invoice.findById(id).then(invoice => {\r\n            if (!invoice) {\r\n                return res.status(HttpStatus.NOT_FOUND).json({ err : 'Cloud not delete any invoice' });\r\n            }\r\n            return res.json(invoice);\r\n        }).catch(err => res.status(HttpStatus.INTERNAL_SERVER_ERROR).json(err));\r\n    },\r\n    update(res, req) {\r\n        const { id } = Joi.object().keys({\r\n            item : Joi.string().optional(),\r\n            date : Joi.date().optional(),\r\n            due: Joi.date().optional(),\r\n            qty : Joi.number().optional().required(),\r\n            tax : Joi.number().optional(),\r\n            rate : Joi.number().optional()\r\n        });\r\n        const { error, value } = Joi.Validate(req.body, schema);\r\n        if(error && error.details)\r\n        {\r\n            return res.status(HttpStatus.BAD_REQUEST).json(error);\r\n        }\r\n        Invoice.findOneAndUpdate({_id: id}, value, {new: true}).then(invoice => res.json(invoice))\r\n        .catch(err => res.status(HttpStatus.INTERNAL_SERVER_ERROR).json(err));\r\n    }\r\n};"]}